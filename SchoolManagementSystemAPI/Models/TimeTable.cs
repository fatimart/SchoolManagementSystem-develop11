//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchoolManagementSystemAPI.Models
{
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;

    public partial class TimeTable
    {
        public SchoolMSEntities ty = new SchoolMSEntities();

        public int TimeTableID { get; set; }
        public int UserID { get; set; }
        public int CourseID { get; set; }
        public int SectionID { get; set; }
        public string RoomNo { get; set; }
        public int Year { get; set; }
        public string TeacherName { get; set; }
        public string CourseName { get; set; }
        public string Time { get; set; }
        public string CourseCode { get; set; }
        public int SectionNo { get; set; }
        public System.DateTime Examdate { get; set; }
    
        public virtual Course Course { get; set; }
        public virtual Section Section { get; set; }
        public virtual User User { get; set; }

        private ObservableCollection<TimeTable> _courseRecords;
        public ObservableCollection<TimeTable> AllCourses
        {
            get
            {
                return _courseRecords;
            }
            set
            {
                _courseRecords = value;
            }
        }
        //MARK: used in course registration page
        public bool checkifRecordTableExsist ( string courseCode, int userID )
        {
            if (!ty.TimeTables.Any(o => o.CourseCode == courseCode && o.UserID == userID))
            {
                return true;
            }
            else
            {
                return false;
            }

        }

        public void DeleteTimeTable ( int userID, string courseCode )
        {
            var deleteTimeTables = ty.TimeTables.Where(m => m.UserID == userID).Where(m => m.CourseCode == courseCode).Single();
            ty.TimeTables.Remove(deleteTimeTables);
            ty.SaveChanges();

        }

        public void DeleteTimeTable ( int TimeTableID )
        {

            var deleteTimeTables = ty.TimeTables.Where(m => m.TimeTableID == TimeTableID).Single();
            ty.TimeTables.Remove(deleteTimeTables);
            ty.SaveChanges();

        }


        public void InsertTimeTable ( int userID, int CourseID, string RoomID, int YearID, string TeacherName,
            string coursename, string time, string courseCode, int SectionNo, DateTime Examdate, int sectionID )
        {
            if (checkifRecordTableExsist(courseCode, userID))
            {
                TimeTable TTable = new TimeTable();
                TTable.UserID = userID;
                TTable.CourseID = CourseID;
                TTable.RoomNo = RoomID;
                TTable.Year = YearID;
                TTable.TeacherName = TeacherName;
                TTable.CourseName = coursename;
                TTable.Time = time;
                TTable.CourseCode = courseCode;
                TTable.SectionNo = SectionNo;
                TTable.Examdate = Examdate;
                TTable.SectionID = sectionID;

                ty.TimeTables.Add(TTable);
                ty.SaveChanges();

            }
               
        }

        //MARK: Need to edit based on the updtaed database
        public void AddTimeTable ( int userID, int CourseID, string RoomID, int YearID, string TeacherName, string coursename,
            string time, string courseCode, int SectionNo, DateTime Examdate, int sectionID )
        {
           
                TimeTable TTable = new TimeTable();
                TTable.UserID = userID;
                TTable.CourseID = CourseID;
                TTable.RoomNo = RoomID;
                TTable.Year = YearID;
                TTable.TeacherName = TeacherName;
                TTable.CourseName = coursename;
                TTable.Time = time;
                TTable.CourseCode = courseCode;
                TTable.SectionNo = SectionNo;
                TTable.Examdate = Examdate;
                TTable.SectionID = sectionID;


                ty.TimeTables.Add(TTable);
                ty.SaveChanges();

        }

        //public List<TimeTable> GetAll1 ()
        //{
        //    return ty.TimeTables.Where(m => m.UserID == UserViewModel.userSession.UserID).ToList();
        //}



        //public void GetAll ()
        //{
        //    AllCourses = new ObservableCollection<TimeTable>();
        //    GetAll1().ForEach(data => AllCourses.Add(new TimeTable()
        //    {

        //        UserID = Convert.ToInt32(data.UserID),
        //        CourseID = Convert.ToInt32(data.CourseID),
        //        RoomNo = data.RoomNo,
        //        Year = data.Year,
        //        TeacherName = data.TeacherName,
        //        CourseName = data.CourseName,
        //        Time = data.Time,
        //        CourseCode = data.CourseCode,
        //        SectionNo = data.SectionNo,
        //        Examdate = Convert.ToDateTime(data.Examdate),
        //        SectionID = Convert.ToInt32(data.SectionID)


        //    }));

        //}
    }
}
